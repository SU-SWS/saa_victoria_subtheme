<?php
/**
 * @file
 * Preprocess functions for Stanford Starter.
 */

/**
 * Prepares variables for the html.html.twig template.
 */
function saa_victoria_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = drupal_get_path('theme', 'stanford_basic');
}

/**
 * Prepares variables for the page
 */
function saa_victoria_subtheme_preprocess_page(&$variables) {
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
}

/**
 * Prepares variables for the paragraph - mainly used when editing the paragraph
 */
//function saa_victoria_subtheme_preprocess_paragraph(&$variables) {
//}


/**
 * Implements hook_preprocess_HOOK().
 */
function saa_victoria_subtheme_preprocess_ds_entity_view(&$variables) {

  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])){
    return;
  }
  $paragraph = $variables['content']['#paragraph'];

  if ( $variables['content']['#paragraph']->bundle() == 'stanford_card') {
    /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */

    $imageCount = $paragraph->get('card_image')->count();

    // Add border style class to card wrapper.
    $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_border_style', 'su-card-wrapper--border-regular');

    $card_info = [];
    //$card_info['card_type'] = [];

    // Add card type class to card wrapper. 3rd variable provides the default card type.
    $card_info['card_type'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_type', 'su-card-wrapper--icon');
    $variables['attributes']['class'][] = $card_info['card_type'];

//    dpm($variables);

    // Check for media in a card then set classes.
    if($imageCount) {

      // Icon card check
      if($card_info['card_type'] == 'su-card-wrapper--icon' )  {
        // Set responsive image style for icons.
        $variables['content']['#fields']['card_image']['su_card_media'][0]['#stanford_media_image_style'] = 'full_responsive';
      }

      // Vertical card check
      else if($card_info['card_type'] === 'su-card-wrapper--vertical' )  {

       // Set responsive image style for rectangle.
        $variables['content']['#fields']['card_image']['su_card_media'][0]['#stanford_media_image_style'] = 'card_2_1';
      }

      // All horizontal
      else if($card_info['card_type'] === 'su-card-wrapper--horizontal' )  {

        $card_info['horizontal_card_image_style'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'horizontal_card_image_style');
        $variables['attributes']['class'][] = $card_info['horizontal_card_image_style'];

        // Small circle image
        if($card_info['horizontal_card_image_style'] === 'su-horizontal-card-wrapper--small-circle' )  {

        // Set responsive image style for circle.
          $variables['content']['#fields']['card_image']['su_card_media'][0]['#stanford_media_image_style'] = 'responsive_1_1';
//          $variables['content']['#fields']['card_image']['su_card_media'][0]['#stanford_media_image_style'] = 'large_square';

        }

        // Horizontal rectangle image
        else if($card_info['horizontal_card_image_style'] === 'su-horizontal-card-wrapper--large-rectangle' )  {

          // Add image position class to card wrapper.
          $card_info['horizontal_card_image_position'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'horizontal_card_image_position');
          $variables['attributes']['class'][] = $card_info['horizontal_card_image_position'];

          // Set responsive image style for rectangle.
          $variables['content']['#fields']['card_image']['su_card_media'][0]['#stanford_media_image_style'] = 'card_2_1';
        }
      }

    } // End media in card check

  } // End card check

  // If banner has an image, add a class
  if ( $paragraph->bundle() == 'stanford_banner') {
    if(isset($variables['content']['#fields']['hero_image']['su_banner_image']['#object']) ) {
      $variables['attributes']['class'][] = 'saa-banner--has-image';

      // Maybe in future change the media handling to be image style Medium Square (220x220) w machine name 'medium_square'
      // Banners use 'full_responsive' mode already. this is a placeholder to use this line once a responsive 1:1 ratio style exists in our d8core
      // $variables['content']['#fields']['hero_image']['su_banner_image'][0]['#stanford_media_image_style'] = 'full_responsive';

      // Check if there is a card
      // Check with mike the newer drupal-y way to check
      if(isset($variables['content']['#fields']['hero_super_headline']['su_banner_sup_header']['#object']) || isset($variables['content']['#fields']['hero_headline']['su_banner_header']['#object']) || isset($variables['content']['#fields']['hero_body']['su_banner_body']['#object']) ) {
        $variables['attributes']['class'][] = 'saa-banner--has-card';
      } else {
        $variables['attributes']['class'][] = 'saa-banner--no-card';
      }

    } else {
      $variables['attributes']['class'][] = 'saa-banner--no-image';
    }
  }
  }
}
