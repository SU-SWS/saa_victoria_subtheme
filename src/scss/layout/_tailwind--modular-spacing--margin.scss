// The purpose of this file is to override default tailwind margin & margin values with Decanter modular spacing values.

// Modular spacing allows for various spacing units that adjust with our custom function to be responsive.

// You can see the tailwind margin classes here: https://tailwindcss.com/docs/margin
// Control the margin on one side of an element using the p{t|r|b|l}-{size} utilities.

// Mixins to apply decanter margin
@mixin apply-modular-spacing-top($space) {
  @include modular-spacing('margin', $space null null null);
}
@mixin apply-modular-spacing-right($space) {
  @include modular-spacing('margin', null $space null null);
}
@mixin apply-modular-spacing-bottom($space) {
  @include modular-spacing('margin', null null $space null);
}
@mixin apply-modular-spacing-left($space) {
  @include modular-spacing('margin', null null null $space);
}

@mixin apply-modular-spacing-all($space) {
  @include modular-spacing('margin', $space $space $space $space);
}


// tailwind classes for margin - set them to use decanter margin amounts

.mt-1 {  // top
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-top(1);
}
.mr-1 {  // right
  //@include modular-spacing('margin', null 1 null null);
  @include apply-modular-spacing-right(1);
}
.mb-1 {  // bottom
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-bottom(1);
}
.ml-1 {  // left
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-left(1);
}

// horizontal margin
.mx-1 {
  @include apply-modular-spacing-right(1);
  @include apply-modular-spacing-left(1);
}

// vertical margin
.my-1 {
  @include apply-modular-spacing-top(1);
  @include apply-modular-spacing-bottom(1);
}

// all sides
.m-1 {
  //@include modular-spacing('margin', 1 1 1 1);
  @include apply-modular-spacing-all(1);
}
// and we'd have to do this for EACH

// positive decanter multipliers
@for $i from 1 through 9 {
  .mt-#{$i} {  // top
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-top($i);
  }
  .mr-#{$i} {  // right
    //@include modular-spacing('margin', null 1 null null);
    @include apply-modular-spacing-right($i);
  }
  .mb-#{$i} {  // bottom
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-bottom($i);
  }
  .ml-#{$i} {  // left
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-left($i);
  }

  // horizontal margin
  .mx-#{$i} {
    @include apply-modular-spacing-right($i);
    @include apply-modular-spacing-left($i);
  }

  // vertical margin
  .my-#{$i} {
    @include apply-modular-spacing-top($i);
    @include apply-modular-spacing-bottom($i);
  }
  // auto-generate for all sides margin
  .m-#{$i} {
    @include apply-modular-spacing-all($i);
  }
}

// .m-0 will set margin to 0, as tailwind documentation says, so we don't confuse.

// 0 default spacing decanter multiplier value - NOT setting margin to "0"

.mt-default {  // top
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-top(0);
}
.mr-default {  // right
  //@include modular-spacing('margin', null 1 null null);
  @include apply-modular-spacing-right(0);
}
.mb-default {  // bottom
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-bottom(0);
}
.ml-default {  // left
  //@include modular-spacing('margin', 1 null null null);
  @include apply-modular-spacing-left(0);
}

// horizontal margin
.mx-default {
  @include apply-modular-spacing-right(0);
  @include apply-modular-spacing-left(0);
}

// vertical margin
.my-default {
  @include apply-modular-spacing-top(0);
  @include apply-modular-spacing-bottom(0);
}

// all sides
.m-default {
  //@include modular-spacing('margin', 1 1 1 1);
  @include apply-modular-spacing-all(0);
}




// exploring negative values for the multiplier for smaller ammounts (NOT negative margin or margin, just smaller multiplier)

@for $i from 1 through 4 {
  .mt-neg-#{$i} {  // top
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-top(-$i);
  }
  .mr-neg-#{$i} {  // right
    //@include modular-spacing('margin', null 1 null null);
    @include apply-modular-spacing-right(-$i);
  }
  .mb-neg-#{$i} {  // bottom
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-bottom(-$i);
  }
  .ml-neg-#{$i} {  // left
    //@include modular-spacing('margin', 1 null null null);
    @include apply-modular-spacing-left(-$i);
  }

  // horizontal margin
  .mx-neg-#{$i} {
    @include apply-modular-spacing-right(-$i);
    @include apply-modular-spacing-left(-$i);
  }

  // vertical margin
  .my-neg-#{$i} {
    @include apply-modular-spacing-top(-$i);
    @include apply-modular-spacing-bottom(-$i);
  }
  // auto-generate for all sides margin
  .m-neg-#{$i} {
    @include apply-modular-spacing-all(-$i);
  }
}


